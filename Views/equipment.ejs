<div class="row">
  <h1 class="is-size-2 mt-3">My Equipment</h1>
  <button class="button is-small is-primary mt-3 js-modal-trigger" data-target="addEquipmentModal">Add New Equipment</button>
  <!-- <button class="button is-small is-primary" onclick="printJournal()">Print Journal Entry</button> -->
  <hr />
</div>
<div class="column">
  <table class="table" id="equipmentTable">
    <thead>
      <tr>
        <th>Equipment Id</th>
        <th>Quantity</th>
        <th>Equipment Name</th>
        <th>Manufacturer Name</th>
        <th>Description</th>
        <th>Cost</th>
        <th>Seial Number</th>
        <th>Actions</th>
      </tr>
    </thead>
    <tbody id="equipmentTableBody">
      
    </tbody>
  </table>
</div>






<!-- Add Equipment Modal -->
<div class="modal" id="addEquipmentModal">
  <div class="modal-background"></div>
  <div class="modal-card">
    <header class="modal-card-head">
      <p class="modal-card-title">Add Equipment</p>
      <button class="delete" aria-label="close"></button>
    </header>
    <section class="modal-card-body">
      <form id="addEquipmentForm" method="POST" action="/equipment/add" enctype="multipart/form-data">
        <div class="field">
          <label class="label">Quantity: </label>
          <div class="control">
            <input type="text" name="quantity" class="input" required placeholder="Enter quantity" />
          </div>
        </div>
        <div class="field">
          <label class="label">Equipment Name: </label>
          <div class="control">
            <input type="text" name="name" class="input" required placeholder="Enter equipment name" />
          </div>
        </div>
        <div class="field">
          <label class="label">Manufacturer Name: </label>
          <div class="control">
            <input type="text" name="manufacturer" class="input" required placeholder="Enter manufacturer name" />
          </div>
        </div>
        <div class="field">
          <label class="label">Description: </label>
          <div class="control">
            <textarea name="description" class="textarea" required placeholder="Enter equipment description"></textarea>
          </div>
        </div>
        <div class="field">
          <label class="label">Cost: </label>
          <div class="control">
            <textarea name="cost" class="input" required placeholder="Enter equipment purchase cost"></textarea>
          </div>
        </div>
        <div class="field">
          <label class="label">Serial Number: </label>
          <div class="control">
            <textarea name="serialNumber" class="input" required placeholder="Enter equipment serial number"></textarea>
          </div>
        </div>
        <div class="field is-grouped is-grouped-right">
          <div class="control">
            <button type="submit" class="button is-primary">Add Equipment</button>
          </div>
        </div>
      </form>
    </section>
  </div>
</div>

<script>

  //Function to add equipment to the table
  document.getElementById('addEquipmentForm').addEventListener('submit', function (event) {
  event.preventDefault(); // Prevent the default form submission

  // Get the form data
  const formData = new FormData(this);

  // Send the data to the server using fetch
  fetch('/equipment/add', {
    method: 'POST',
    body: formData,
  })
    .then(response => response.json())
    .then(data => {
      if (data.success) {
        // If successful, add the new equipment to the table
        const newRow = `
          <tr>
            <td>${data.equipmentId}</td>
            <td>${data.quantity}</td>
            <td>${data.name}</td>
            <td>${data.manufacturerName}</td>
            <td>${data.description}</td>
            <td>${data.cost}</td>
            <td>${data.serialNumber}</td>
            <td>
              <a href="/equipment/edit/${data.equipmentId}" class="button is-small is-info">Edit</a>
              <a href="/equipment/delete/${data.equipmentId}" class="button is-small is-danger" onclick="return confirm('Are you sure you want to delete this item?');">Delete</a>
            </td>
          </tr>`;
        document.getElementById('equipmentTableBody').insertAdjacentHTML('beforeend', newRow);

        // Close the modal
        const modal = document.getElementById('addEquipmentModal');
        modal.classList.remove('is-active');

        // Reset the form
        this.reset();
      } else {
        // Display an error message
        alert('Error adding equipment: ' + data.message);
      }
    })
    .catch(error => {
      console.error('Error:', error);
      alert('An unexpected error occurred. Please try again.');
    });
});


  // Function for the Equipment DataTable
  $('#equipmentTable').dataTable({
    "columnDefs": [{
      "className": "dt-body-center",
      "targets": [0, 1, 2, 3, 4, 5]
    },
    {
      targets: 6, // The "Actions" column index
      render: function (data, type, row) {
        return `
          <a href="/equipment/edit/${row[0]}" class="button is-small is-info">Edit</a>
          <a href="/equipment/delete/${row[0]}" class="button is-small is-danger" onclick="return confirm('Are you sure you want to delete this item?');">Delete</a>
        `;
      },
    }],
    "columnDefs": [{ width: 600, targets: 4 }],
    "scrollX": true,
  });

  // Function for the Modal
  document.addEventListener('DOMContentLoaded', () => {
    // Functions to open and close a modal
    function openModal($el) {
      $el.classList.add('is-active');
    }

    function closeModal($el) {
      $el.classList.remove('is-active');
    }

    function closeAllModals() {
      (document.querySelectorAll('.modal') || []).forEach(($modal) => {
        closeModal($modal);
      });
    }

    // Add a click event on buttons to open a specific modal
    (document.querySelectorAll('.js-modal-trigger') || []).forEach(($trigger) => {
      const modal = $trigger.dataset.target;
      const $target = document.getElementById(modal);

      $trigger.addEventListener('click', () => {
        openModal($target);
      });
    });

    // Add a click event on various child elements to close the parent modal
    (document.querySelectorAll('.modal-background, .modal-close, .modal-card-head .delete, .modal-card-foot .button') || []).forEach(($close) => {
      const $target = $close.closest('.modal');

      $close.addEventListener('click', () => {
        closeModal($target);
      });
    });

    // Add a keyboard event to close all modals
    document.addEventListener('keydown', (event) => {
      if(event.key === "Escape") {
        closeAllModals();
      }
    });
  });

  
</script>