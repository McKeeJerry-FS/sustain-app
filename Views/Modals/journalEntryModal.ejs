<div class="modal modal-lg" id="journalEntryModal">
  <div class="modal-background is-two-thirds"></div>
  <div class="modal-card is-two-thirds">
    <header class="modal-card-head has-background-primary">
      <p class="modal-card-title">Add a New Journal Entry</p>
      <button class="delete" aria-label="close"></button>
    </header>
    <section class="modal-card-body">
      <!-- Content ... -->
      <form id="journalEntryForm" enctype="multipart/form-data">
        <div class="field">
          <label class="label">Date</label>
          <div class="control">
            <input id="entryDate" name="date" class="input" type="date">
          </div>
        <div class="field">
          <label class="label">Journal Entry</label>
          <div class="control">
            <textarea id="journalEntryArea" name="journalEntry" class="textarea" placeholder="Write your journal entry here..."></textarea>
          </div>
        </div>
        <div class="field">
          <label class="label">Garden Type</label>
          <div class="control">
            <div class="select">
              <select name="gardenType" id="gardenType">
                <option value="">Select Garden Type</option>
                <option value="hydroponics">Hydroponics</option>
                <option value="aeroponics">Aeroponics</option>
                <option value="aquaponics">Aquaponics</option>
                <option value="soil">Soil</option>
                <option value="other">Other</option>
              </select>
            </div>
          </div>
        </div>
        <div class="field">
          <label class="label">pH</label>
          <div class="control">
            <input id="ph" name="ph" class="input" type="text" placeholder="Enter pH value">
          </div>
        </div>
        <div class="field">
          <label class="label">Humidity</label>
          <div class="control">
            <input id="humidity" name="humidity" class="input" type="text" placeholder="Enter Humidity value">
          </div>
        </div>
        <div class="field">
          <label class="label">VPD</label>
          <div class="control">
            <input id="vpd" name="vpd" class="input" type="text" placeholder="Enter VPD value">
          </div>
        </div>
        <div class="field">
          <label class="label">EC</label>
          <div class="control">
            <input id="ec" name="ec" class="input" type="text" placeholder="Enter EC value">
          </div>
        </div>
        <div class="field">
          <label class="label">Water Level</label>
          <div class="control">
            <input id="waterLevel" name="waterLevel" class="input" type="text" placeholder="Enter Water Level value">
          </div>
        </div>
        <div class="field">
          <label class="label">Temperature (Air)</label>
          <div class="control">
            <input id="tempAir" name="airTemp" class="input" type="text" placeholder="Enter air temperature">
          </div>
        </div>
        <div class="field">
          <label class="label">Temperature (Water)</label>
          <div class="control">
            <input id="tempWater" name="waterTemp" class="input" type="text" placeholder="Enter water temperature">
          </div>
        </div>
        <div class="field">
          <label class="label">Lighting (Active)</label>
          <div class="control">
            <input id="lightingActive" name="lightActive" class="input" type="text" placeholder="Enter nutrient solution details">
          </div>
        </div>
        <div class="field">
          <label class="label">Lighting (Dark)</label>
          <div class="control">
            <input id="lightingDark" name="lightInactive" class="input" type="text" placeholder="Enter nutrient solution details">
          </div>
        </div>
        <div class="field">
          <label class="label">Notes</label>
          <div class="control">
            <textarea id="notes" name="notes" class="textarea" placeholder="Additional notes..."></textarea>
          </div>
        </div>
        <div class="field">
          <label class="label">Image Upload</label>
          <div class="control">
            <input id="imageUpload" name="image" class="input" type="file" accept="image/*">
          </div>
        </div>
        <button type="submit" class="button is-info">Add Entry</button>
      </form>
    </section>
    <footer class="modal-card-foot has-background-primary">
      <div class="buttons">
        <button class="button is-danger">Cancel</button>
      </div>
    </footer>
  </div>
</div>

<script src="https://cdn.tiny.cloud/1/o1vp1h0xeiv7vzeq5zioltlng00d3cxnsal4zfavso8s9jdo/tinymce/7/tinymce.min.js" referrerpolicy="origin"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script>

  // script for TinyMCE editor
  tinymce.init({
    selector: '#journalEntryArea',
    toolbar: 'undo redo | styleselect | bold italic underline | alignleft aligncenter alignright alignjustify | outdent indent | image code hr ',
    plugins: 'lists link image code hr',
    menubar: 'format insert'
  });

  document.getElementById('journalEntryForm').addEventListener('submit', async function (e) {
    e.preventDefault(); // Prevent the default form submission

    // Synchronize TinyMCE content with the textarea
    tinymce.triggerSave();

    const formData = new FormData(this); // Collect form data

    try {
      const response = await fetch('/journal/add', {
        method: 'POST',
        body: formData,
      });

      const result = await response.json();

      if (result.success) {
        // Show success SweetAlert
        Swal.fire({
          icon: 'success',
          title: 'Success!',
          text: result.message,
          confirmButtonText: 'OK',
        }).then(() => {
          // Redirect to the journal page
          window.location.href = '/journal';
        });
      } else {
        // Show error SweetAlert
        Swal.fire({
          icon: 'error',
          title: 'Error!',
          text: result.message,
          confirmButtonText: 'OK',
        });
      }
    } catch (error) {
      console.error('Error submitting form:', error);
      Swal.fire({
        icon: 'error',
        title: 'Error!',
        text: 'An unexpected error occurred. Please try again.',
        confirmButtonText: 'OK',
      });
    }
  });

  document.getElementById('gardenType').addEventListener('change', function () {
    const gardenType = this.value; // Get the selected value
    const gardenOptionSelect = document.getElementById('gardenOption');

    // Clear existing options
    gardenOptionSelect.innerHTML = '<option value="">Select Garden Option</option>';

    // Populate options based on gardenType
    if (gardenType === 'hydroponics') {
      gardenOptionSelect.innerHTML += '<option value="deepWaterCulture">Deep Water Culture</option>';
      gardenOptionSelect.innerHTML += '<option value="nutrientFilmTechnique">Nutrient Film Technique</option>';
      gardenOptionSelect.innerHTML += '<option value="ebbFlow">Ebb & Flow</option>';
    } else if (gardenType === 'aeroponics') {
      gardenOptionSelect.innerHTML += '<option value="tower">Tower Garden</option>';
    } else if (gardenType === 'aquaponics') {
      gardenOptionSelect.innerHTML += '<option value="fishTank">Fish Tank</option>';
    } else if (gardenType === 'soil') {
      gardenOptionSelect.innerHTML += '<option value="raisedBed">Raised Bed</option>';
      gardenOptionSelect.innerHTML += '<option value="container">Container Garden</option>';
    } else if (gardenType === 'other') {
      gardenOptionSelect.innerHTML += '<option value="other">Other</option>';
    }
  });
</script>